{"version":3,"sources":["firebase.js","components/JobPostings.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","JobPostings","jobPostings","setJobPostings","useState","useEffect","async","jobPostingsData","getDocs","collection","docs","map","doc","data","fetchJobPostings","React","createElement","job","index","key","organization","jobTitle","postTitle","package","href","applicationLink","target","rel","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"gPAMA,MAWMA,EAAMC,YAXW,CACnBC,OAAQ,0CACRC,WAAY,0CACZC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAObC,EAAKC,YAAaV,GC2BTW,MA1CKA,KAClB,MAAOC,EAAaC,GAAkBC,mBAAS,IAY/C,OAVAC,oBAAU,KACiBC,WACvB,MACMC,SAD4BC,YAAQC,YAAWV,EAAI,iBACbW,KAAKC,IAAIC,GAAOA,EAAIC,QAChEV,EAAeI,IAGjBO,IACC,IAGDC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UAAI,sBAGRD,IAAAC,cAAA,aACGd,EAAYS,IAAI,CAACM,EAAKC,IACrBH,IAAAC,cAAA,MAAIG,IAAKD,GACPH,IAAAC,cAAA,UAAKC,EAAIG,cACTL,IAAAC,cAAA,UAAKC,EAAII,UACTN,IAAAC,cAAA,UAAKC,EAAIK,WACTP,IAAAC,cAAA,UAAKC,EAAIM,SACTR,IAAAC,cAAA,UAAID,IAAAC,cAAA,KAAGQ,KAAMP,EAAIQ,gBAAiBC,OAAO,SAASC,IAAI,uBAAsB,gBCtB3EC,MAVf,WACE,OACEb,IAAAC,cAAA,OAAKa,UAAU,OACbd,IAAAC,cAAA,UAAQa,UAAU,cAChBd,IAAAC,cAACf,EAAW,SCEL6B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,IAAAC,cAACD,IAAMiC,WAAU,KACfjC,IAAAC,cAACY,EAAG,QAORE","file":"static/js/main.c7084dd3.chunk.js","sourcesContent":["\n// src/firebase.js\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n\n// Your Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBq__QhwGzjCQ5BE99S59vxsk5fjIfJnX0\",\n    authDomain: \"job-openings-off-campus.firebaseapp.com\",\n    projectId: \"job-openings-off-campus\",\n    storageBucket: \"job-openings-off-campus.appspot.com\",\n    messagingSenderId: \"321941401584\",\n    appId: \"1:321941401584:web:ff3dbcf96a357ec2e33735\",\n    measurementId: \"G-S042FLM46C\"\n  };\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firestore\nconst db = getFirestore(app);\n\nexport { db };\n\n","// src/components/JobPostings.js\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebase';\nimport { collection, getDocs } from 'firebase/firestore';\n\nconst JobPostings = () => {\n  const [jobPostings, setJobPostings] = useState([]);\n\n  useEffect(() => {\n    const fetchJobPostings = async () => {\n      const jobPostingsSnapshot = await getDocs(collection(db, 'jobPostings'));\n      const jobPostingsData = jobPostingsSnapshot.docs.map(doc => doc.data());\n      setJobPostings(jobPostingsData);\n    };\n\n    fetchJobPostings();\n  }, []);\n\n  return (\n    <div>\n      <h1>Job Postings</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Organization</th>\n            <th>Job Title</th>\n            <th>Post Title</th>\n            <th>Package</th>\n            <th>Application Link</th>\n          </tr>\n        </thead>\n        <tbody>\n          {jobPostings.map((job, index) => (\n            <tr key={index}>\n              <td>{job.organization}</td>\n              <td>{job.jobTitle}</td>\n              <td>{job.postTitle}</td>\n              <td>{job.package}</td>\n              <td><a href={job.applicationLink} target=\"_blank\" rel=\"noopener noreferrer\">Apply</a></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default JobPostings;\n","// src/App.js\nimport React from 'react';\nimport './App.css';\nimport JobPostings from './components/JobPostings.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <JobPostings />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}